using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
/// <summary>
/// 관측 데이터 복제 (Duplicate Observed Data)
/// 
/// 도메인 데이터는 GUI 컨트롤 안에서만 사용 가능한데,
/// 도메인 메소드가 그 데이터에 접근해야 할 땐
/// 그 데이터를 도메인 객체로 복사하고,
/// 양측의 데이터를 동기화 하는 관측 인터페이스 observer를 작성하자.
/// 
/// 계층구조가 체계적인 시스템은 비즈니스 로직 처리 코드와 사용자 인터페이스 처리 코드가 분리되어있다.
/// 그 이유는
/// - 비슷한 비즈니스 로직을 여러 인터페이스가 처리해야 하는 경우라서
/// - 비즈니스 로직까지 처리하려면 사용자 인터페이스가 너무 복잡해지니까
/// - GUI와 분리된 도메인 객체가 더욱 유지보수하기 쉬우니까
/// - 두 부분을 서로 다른 개발자가 다루게 할 수 있으니까
/// 
/// 기능은 간단히 분리할 수 있어도 데이터는 분리하기 어려울 때가 많다.
/// 도메인 모델에 있는 데이터와 같은 의미를 지닌 데이터를 GUI컨트롤에 넣어야 하기 때문이다.
/// MVC패턴 이후로 사용자 인터페이스는 이러한 데이터를 제공하고 모든 데이터의 동기화를 유지하는 다층 시스템을 사용했다.
/// 
/// 비즈니스 로직이 사용자 인터페이스 안에 들어있는 2계층 방식으로 개발된 코드가 있다면
/// 인터페이스에서 기능을 분리해야 한다.
/// 대부분은 메소드를 쪼개서 옮기는 작업이다.
/// 하지만 데이터는 그저 옮기긱만 해선 안 되고 복제하고 동기화 기능까지 작성해야 한다.
/// 
/// 
/// 
/// </summary>

namespace RefactoringStudy._41_DuplicateObservedData
{
    class DuplicateObservedData
    {
    }
}
